name: Build and Deploy to Azure Web App (Container)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  IMAGE_NAME: inventory-mvc-app

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set short SHA
        id: vars
        run: echo "IMAGE_TAG=${GITHUB_SHA::8}" >> $GITHUB_ENV

      - name: Log in to Azure
        uses: azure/login@v2.3.0
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Log in to ACR
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.ACR_LOGIN_SERVER }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Build and push image to ACR
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./InventoryManagementApp/Dockerfile
          push: true
          tags: |
            ${{ secrets.ACR_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
            ${{ secrets.ACR_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:latest

      - name: Configure Azure Web App settings
        uses: azure/appservice-settings@v1
        with:
          app-name: ${{ secrets.AZURE_WEBAPP_NAME }}
          app-settings-json: |
            [
              {
                "name": "ConnectionStrings__InventoryManagmentApp",
                "value": "${{ secrets.AZURE_SQL_CONNECTIONSTRING }}",
                "slotSetting": false
              }
            ]
      - name: Apply EF Core migrations to Azure SQL
        run: |
          dotnet tool install --global dotnet-ef --version 9.*
          dotnet ef database update --project ./InventoryManagementApp/InventoryManagementApp.csproj
        env:
          ConnectionStrings__InventoryManagmentApp: ${{ secrets.AZURE_SQL_CONNECTIONSTRING }}

      - name: Deploy to Azure Web App (set container image)
        env:
          ACR_LOGIN_SERVER: ${{ secrets.ACR_LOGIN_SERVER }}
        run: |
          az account set --subscription ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          az webapp config container set \
            --name ${{ secrets.AZURE_WEBAPP_NAME }} \
            --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
            --docker-custom-image-name ${{ secrets.ACR_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} \
            --docker-registry-server-url https://${{ secrets.ACR_LOGIN_SERVER }} \
            --docker-registry-server-user ${{ secrets.ACR_USERNAME }} \
            --docker-registry-server-password ${{ secrets.ACR_PASSWORD }}
          az webapp restart --name ${{ secrets.AZURE_WEBAPP_NAME }} --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }}

